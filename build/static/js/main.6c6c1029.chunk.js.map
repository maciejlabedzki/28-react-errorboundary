{"version":3,"sources":["BuggyCounter.jsx","ErrorBoundary.jsx","Module1.jsx","App.js","index.js"],"names":["BuggyCounter","React","Component","constructor","props","super","this","state","counter","handleClick","bind","setState","render","Error","react_default","a","createElement","onClick","ErrorBoundary","error","errorInfo","componentDidCatch","style","whiteSpace","toString","componentStack","children","Module1","Fragment","App","src_Module1","src_ErrorBoundary","src_BuggyCounter","val","ErrorTh","rootElement","document","getElementById","ReactDOM","StrictMode","src_App"],"mappings":"8LAwBeA,MAtBf,cAA2BC,IAAMC,UAC/BC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEC,QAAS,GACxBF,KAAKG,YAAcH,KAAKG,YAAYC,KAAKJ,MAG3CG,cACEH,KAAKK,SAAS,EAAGH,cAAH,CACZA,QAASA,EAAU,KAIvBI,SACE,GAA2B,IAAvBN,KAAKC,MAAMC,QAEb,MAAM,IAAIK,MAAM,cAElB,OAAOC,EAAAC,EAAAC,cAAA,MAAIC,QAASX,KAAKG,aAAcH,KAAKC,MAAMC,WCgBvCU,MAlCf,cAA4BjB,IAAMC,UAChCC,YAAYC,GACVC,MAAMD,GACNE,KAAKC,MAAQ,CAAEY,MAAO,KAAMC,UAAW,MAGzCC,kBAAkBF,EAAOC,GAEvBd,KAAKK,SAAS,CACZQ,MAAOA,EACPC,UAAWA,IAKfR,SACE,OAAIN,KAAKC,MAAMa,UAGXN,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,mCACAF,EAAAC,EAAAC,cAAA,WAASM,MAAO,CAAEC,WAAY,aAC3BjB,KAAKC,MAAMY,OAASb,KAAKC,MAAMY,MAAMK,WACtCV,EAAAC,EAAAC,cAAA,WACCV,KAAKC,MAAMa,UAAUK,iBAMvBnB,KAAKF,MAAMsB,WCVPC,MApBf,cAAsBzB,YACpBU,SACE,OACEE,EAAAC,EAAAC,cAAAF,EAAAC,EAAAa,SAAA,KACEd,EAAAC,EAAAC,cAAA,SACEF,EAAAC,EAAAC,cAAA,+DAEEF,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,WAHF,iDAKEF,EAAAC,EAAAC,cAAA,WALF,+GCmCKa,MA7Bf,WACE,OACEf,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACc,EAAD,MACAhB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAAA,iIAIAF,EAAAC,EAAAC,cAACgB,EAAD,MACAlB,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAAA,WACAF,EAAAC,EAAAC,cAAA,0HAIAF,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAD,OAEFlB,EAAAC,EAAAC,cAACe,EAAD,KACEjB,EAAAC,EAAAC,cAACgB,EAAD,OAGFlB,EAAAC,EAAAC,cAACe,EAAD,KAhCN,SAAiBE,GACf,GAAY,IAARA,EAEF,MAAM,IAAIpB,MAAM,cAEhB,OAAO,KA2BWqB,CAAQ,MChC9B,MAAMC,EAAcC,SAASC,eAAe,QAC5CC,IAAS1B,OACPE,EAAAC,EAAAC,cAACF,EAAAC,EAAMwB,WAAP,KACEzB,EAAAC,EAAAC,cAACwB,EAAD,OAEFL","file":"static/js/main.6c6c1029.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\nclass BuggyCounter extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { counter: 0 };\r\n    this.handleClick = this.handleClick.bind(this);\r\n  }\r\n\r\n  handleClick() {\r\n    this.setState(({ counter }) => ({\r\n      counter: counter + 1,\r\n    }));\r\n  }\r\n\r\n  render() {\r\n    if (this.state.counter === 5) {\r\n      // Simulate a JS error\r\n      throw new Error(\"I crashed!\");\r\n    }\r\n    return <h1 onClick={this.handleClick}>{this.state.counter}</h1>;\r\n  }\r\n}\r\n\r\nexport default BuggyCounter;\r\n","import React from \"react\";\r\n\r\nclass ErrorBoundary extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { error: null, errorInfo: null };\r\n  }\r\n\r\n  componentDidCatch(error, errorInfo) {\r\n    // Catch errors in any components below and re-render with error message\r\n    this.setState({\r\n      error: error,\r\n      errorInfo: errorInfo,\r\n    });\r\n    // You can also log error messages to an error reporting service here\r\n  }\r\n\r\n  render() {\r\n    if (this.state.errorInfo) {\r\n      // Error path\r\n      return (\r\n        <div>\r\n          <h2>Something went wrong.</h2>\r\n          <details style={{ whiteSpace: \"pre-wrap\" }}>\r\n            {this.state.error && this.state.error.toString()}\r\n            <br />\r\n            {this.state.errorInfo.componentStack}\r\n          </details>\r\n        </div>\r\n      );\r\n    }\r\n    // Normally, just render children\r\n    return this.props.children;\r\n  }\r\n}\r\n\r\nexport default ErrorBoundary;\r\n","import React, { Component } from \"react\";\r\n\r\nclass Module1 extends Component {\r\n  render() {\r\n    return (\r\n      <>\r\n        <p>\r\n          <b>\r\n            This is an example of error boundaries in React 16.\r\n            <br />\r\n            <br />\r\n            Click on the numbers to increase the counters.\r\n            <br />\r\n            The counter is programmed to throw when it reaches 5. This simulates\r\n            a JavaScript error in a component.\r\n          </b>\r\n        </p>\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Module1;\r\n","import React from \"react\";\nimport \"./styles.css\";\nimport BuggyCounter from \"./BuggyCounter\";\nimport ErrorBoundary from \"./ErrorBoundary\";\nimport Module1 from \"./Module1\";\nfunction ErrorTh(val) {\n  if (val === 5) {\n    // Simulate a JS error\n    throw new Error(\"I crashed!\");\n  } else {\n    return null;\n  }\n}\nfunction App() {\n  return (\n    <div>\n      <Module1 />\n      <ErrorBoundary>\n        <p>\n          These two counters are inside the same error boundary. If one crashes,\n          the error boundary will replace both of them.\n        </p>\n        <BuggyCounter />\n        <BuggyCounter />\n      </ErrorBoundary>\n      <hr />\n      <p>\n        These two counters are each inside of their own error boundary. So if\n        one crashes, the other is not affected.\n      </p>\n      <ErrorBoundary>\n        <BuggyCounter />\n      </ErrorBoundary>\n      <ErrorBoundary>\n        <BuggyCounter />\n      </ErrorBoundary>\n\n      <ErrorBoundary>{ErrorTh(6)}</ErrorBoundary>\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nconst rootElement = document.getElementById(\"root\");\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  rootElement\n);\n"],"sourceRoot":""}